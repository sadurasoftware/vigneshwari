App.jsx file code for store.js
App.css file code for App.jsx

import React, { useState } from 'react';
import './App.css';
import useStore from './store';

function App() {

  // Local state to manage form inputs
  const [formData, setFormData] = useState({ name: '', email: '', age:'' });
  const [editIndex, setEditIndex] = useState(null);
  const [editMode, setEditMode] = useState(false);


  // Access Zustand store
  const { users, addUser, updateUser, deleteUser } = useStore();

  // Handle adding a user
  const handleAddUser = (event) => {
    event.preventDefault();
    const { name, email, age} = formData;
    if (name && email && age ) {
      addUser({ name, email, age});
      setFormData({ name: '', email: '', age:''}); // Clear the form
    }
  };

  // Handle updating a user
  const handleUpdateUser = (event) => {
    event.preventDefault();
    const { name, email, age } = formData;
    if (name && email && age && editIndex !== null) {
      updateUser(editIndex, { name, email, age });
      setFormData({ name: '', email: '', age:''});
      setEditIndex(null);
      setEditMode(false);
    }
  };

  // Handle editing a user
  const handleEditUser = (index) => {
    const user = users[index];
    setFormData({ name: user.name, email: user.email, age: user.age});
    setEditIndex(index);
    setEditMode(true);
  };

  // Handle deleting a user
  const handleDeleteUser = (index) => {
    deleteUser(index);
  };

  // General input change handler for both name and email fields
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevData) => ({
      ...prevData,
      [name]: value,
    }));
  };

  return (
    <div className="App">
      <h2>User Registration</h2>

      <form onSubmit={editMode ? handleUpdateUser : handleAddUser}>
        <input
          type="text"
          placeholder="Name"
          name="name"
          value={formData.name}
          onChange={handleInputChange}
          required
        />
        <input
          type="email"
          placeholder="Email"
          name="email"
          value={formData.email}
          onChange={handleInputChange}
          required
        />
        <input
          type="number"
          placeholder="Age"
          name="age"
          value={formData.age}
          onChange={handleInputChange}
        />
        <button type="submit">{editMode ? 'Update User' : 'Add User'}</button>
      </form>

      <h2>Registered Users</h2>
      <ul>
        {users.map((user, index) => (
          <li key={index}>
            {/* <span><b>Name:</b>{user.name} (<b>Mail:</b>{user.email})</span> */}
            <span><b>Name:</b>{user.name} (<b>Mail:</b>{user.email}) (<b>Age:</b>{user.age})</span>
            <button onClick={() => handleEditUser(index)}>Edit</button>
            <button onClick={() => handleDeleteUser(index)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;





css


body {
  font-family: Arial, sans-serif;
  background-color: #f4f4f4;
  padding: 20px;
  justify-content: center; 
  align-items: center;
}

.App {
  max-width: 600px;
  margin: 0 auto;
  background: white;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

h1 {
  text-align: center;
  color: #007bff;
}

form {
  display: flex;
  flex-direction: column;
  margin-bottom: 20px;
  
}

input[type='text'],
input[type='email'],
input[type='number']
{
  padding: 10px;
  margin-bottom: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 16px;
}

button {
  padding: 10px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
}

button:hover {
  background-color: #0056b3;
}

ul {
  list-style-type: none;
  padding-left: 0;
}

li {
  display: flex;
  justify-content: space-between;
  padding: 10px 0;
  border-bottom: 1px solid #ccc;
}

li button {
  background-color: #e74c3c;
  margin-left: 10px;
}

li button:hover {
  background-color: #c0392b;
}

button[type="submit"] {
  background-color: #28a745;
}

button[type="submit"]:hover {
  background-color: #218838;
}
